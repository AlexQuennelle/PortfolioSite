name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branch's name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies and build site
        run: |
          npm install
          npm run build # Ensure your build command is correct for your project
        # Only run if you have a build step that outputs to a 'dist' directory
        # If your site doesn't require a build (e.g., pure static HTML), you can skip this.

      - name: Check for broken links
        run: |
          # Install broken-link-checker and http-server globally for easier access
          npm install -g broken-link-checker http-server

          # Serve the built site in the background
          # Adjust 'dist' if your build output is in a different directory
          # If no build step, you might just serve the root of your repository (e.g., 'http-server .')
          http-server dist -p 8080 &
          SERVER_PID=$!

          echo "Waiting for server to start..."
          sleep 5 # Give the server some time to start up

          echo "Running link check against the built site..."
          # Run the link checker
          # --recursive: Check all links on the served site
          # --ordered: Display links in the order they are found
          # --exclude: Exclude specific domains
          # --filter-level 1: Report only broken links (4xx, 5xx status codes)
          # --timeout: Increase timeout for potentially slow links
          LINK_CHECK_EXIT_CODE=0
          blc http://localhost:8080 --recursive --ordered --exclude linkedin.com --exclude twitter.com --filter-level 1 --timeout 10000 || LINK_CHECK_EXIT_CODE=$?

          # Kill the server
          echo "Killing the server..."
          kill $SERVER_PID

          # Exit with the link checker exit code
          # This ensures the workflow fails if broken links are found
          exit $LINK_CHECK_EXIT_CODE

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
